
TsetNg de bu anontation lar vardi

 Suite-----------------------------------------Hepsinden Ã¶nce calisir

      Test

           Group

                Class

                     Method

                     Bnlarin before ve after leri var

   @Test(priority = 2)  sira numarasi verildi
   @Test(dependsOnMethods = {"test"}) // bundan onceki test metodu calisacak .bu metot onceki  metoda bagli

   yani dependsonMetod ile testleri birbirine baglariz.dependsOnMetot olunca proority gecersiz olur
   public void test2(){
   }

   Not:uste dogru tek tek baglamada 3 e kadar siniri var
   POM:Page objeckt model
   sayfalar class olarak tutulur
   Locatorlar ilgili metotlar ve sayfalar iicnde olur

   (Maven) POM:Project object  Model

   FindBy:
   @FindBy -> selenium u dinamik element kullanimi
   @FindBys
   @FindAll
    bu annotationlar kullanilirsa driver.findElelemnt yada precence wait ihtiyaci olmaz.
    element ne zaman cagrilirsa ,tanimlanan locator o zaman element olarak tekrar olustururlur

     PageFactory.initElements(driver,this);// bu initialize olmazsa findBy da element olusturulamaz

     PageFactory.initElements(new AjaxElementLocatorFactory(driver,10),this); // ajax beklemesi yapmak icin kullanilir.ornegin bir sosyal medya
     platformunda asagi inildikce fotograflarin yuklenmesi ve hepsinin birden yuklenmememsi

    Locator class taki findBy lari kullanmak icin o clasta ya PageFactory.initElements(driver,this);
    bu sekilde yapariz yada test classinda  ls= PageFactory.initElements(driver,Locators.class);
     bu sekilde yapariz.yani locators class ta constructor  ve icinde driver e gerek yok


/*
    //FindAll icindeki8 @findby lar ile belirtilen tum elementleri
    //ayri ayri bulur
    @FindAll(
            @FindBy(css = " "),
            @FindBy(xpath = " ")
    )
            List<WebElement> elements;

    // birinin altinda digerini arar
    @FindBys(
            @FindBy(css = ""),
            @FindBy(css = "")
    )
        List<WebElement> elements;*/
