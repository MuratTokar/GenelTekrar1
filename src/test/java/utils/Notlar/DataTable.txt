DataTable:
steplerde kullanilacak datalardir
Steplerin hemen altina yazlir
| | bu semboller arasina yazilir

#List Datatable:
Given datatable as
| 1 |
| 2 |
| 3 |
| 4 |

#List of list
Given datatable as
| 1 | 1 | 1 |
| 2 | 2 | 2 |
| 3 | 3 | 3 |
| 4 | 4 | 4 |

#Map(key,value)
Given datatable as
| username | user1 |
| password | abc123|
| age      | 21    |

#List of Map
Given datatable as
| username | password | age |
| user1    | pass1    | 12  |
| user2    | pass2    | 34  |




*****************************************************************


#List Datatable:
Given datatable as
| 1 |
| 2 |
| 3 |
| 4 |

  @Given("write the following numbers")
    public void writeTheFollowingNumbers(DataTable table) { // scenario da data table yazdik stepin altina ama burda g√∂stermedi.
        // o halde DataTable table ekleriz ve asagiyi list aliriz eger   List<Integer> list burasi integer ise table.asList(Integer.class); buraya
       // Integer.clas  belirtmeliyiz ama List<String> list burasi String  ise table.asList()  aslist icine birsey yazmiyoruz
        List<Integer> list=table.asList(Integer.class);
        list.forEach(e-> System.out.println(e)); // degerleri yazdik
    }


    ******************************************************
    MAP LAR BU SEKILDE OLUR
    @Given("write the following map")
        public void writeTheFollowingMap(DataTable table) {
            Map<String,String> map=table.asMap();
            System.out.println(map.get("username"));
            System.out.println(map.get("password"));
            System.out.println(map.get("firstname"));
            System.out.println(map.get("lastname"));
        }

   **************************************************

        LIST OF LIST
          @Given("write the following numbers list of list")
            public void writeTheFollowingNumbersListOfList(DataTable table) {
                List<List<String>> lists=table.asLists();
                lists.forEach(list->{
                    list.forEach(s -> System.out.print(s + "\t"));
                    System.out.println();
                });
            }
            ************************************************
            //Map ForEach ilede soyle yapilir
                    map.forEach((k, v) -> System.out.println(k + ":" + v));


 ****************************************************************************


  Scenario:list of maps
    Given write the following maps
      | username | password | firstname  | lastname  |
      | uname1   | pass1    | firstname1 | lastname1 |
      | uname2   | pass2    | firstname2 | lastname2 |
      | uname3   | pass3    | firstname3 | lastname3 |
      | uname4   | pass4    | firstname4 | lastname4 |
      | uname5   | pass5    | firstname5 | lastname5 |

      @Given("write the following maps")
         public void writeTheFollowingMaps(DataTable table) {
             List<Map<String,String>> lists=table.asMaps();
             lists.forEach(map->{
                 map.forEach((k,v)-> System.out.println(k +":" +v));
                 System.out.println();
             });
         }

 ************************************************************************
 *-Map<String,String> map=dataTable.asMap(String.class,String.class);
 *-Map<String,Integer> map=dataTable.asMap(String.class,Integer.class);
 *-Map<String,String> map=dataTable.asMap();

 *-Tum dataTable ler string ise String.class yazmaya gerek yok

